var documenterSearchIndex = {"docs":
[{"location":"pages/PhaseFunction/#Phase-Function-Module","page":"PhaseFunction","title":"Phase-Function Module","text":"","category":"section"},{"location":"pages/PhaseFunction/#Introduction","page":"PhaseFunction","title":"Introduction","text":"","category":"section"},{"location":"pages/PhaseFunction/","page":"PhaseFunction","title":"PhaseFunction","text":"This module enables scattering phase-function calculation of atmospheric aerosols with different size distributions, incident wavelengths, and refractive indices. It can perform the calculation using either the Siewert NAI-2 or Domke PCW methods (Suniti Sanghavi 2014). ","category":"page"},{"location":"pages/PhaseFunction/","page":"PhaseFunction","title":"PhaseFunction","text":"You can calculate a phase function in three steps: ","category":"page"},{"location":"pages/PhaseFunction/","page":"PhaseFunction","title":"PhaseFunction","text":"Use make_univariate_aerosol to create an aerosol with selected distribution and properties\nUse make_mie_model to set up all calculation parameters\nUse compute_aerosol_optical_properties to perform the phase-function calculation using the defined model settings","category":"page"},{"location":"pages/PhaseFunction/#Example","page":"PhaseFunction","title":"Example","text":"","category":"section"},{"location":"pages/PhaseFunction/","page":"PhaseFunction","title":"PhaseFunction","text":"using RadiativeTransfer\nusing RadiativeTransfer.PhaseFunction\nusing Distributions\nusing BenchmarkTools\n\n## \n## STEP 1: Create the Aerosol\n## \n\n# Aerosol particle distribution and properties \nμ  = 0.3                # Log mean radius\nσ  = 6.82               # Log stddev of radius\nr_max = 30.0            # Maximum radius\nnquad_radius = 2500     # Number of quadrature points for integrating of size dist.\nnᵣ = 1.3                # Real part of refractive index\nnᵢ = 0.0                # Imag part of refractive index\n\nsize_distribution = LogNormal(log(μ), log(σ))\n\n# Create the aerosol\naero = make_univariate_aerosol(size_distribution, r_max, nquad_radius, nᵣ, nᵢ)\n\n## \n## STEP 2: Create the Mie Calculations model\n## \n\nλ = 0.55   # Incident wavelength\npolarization_type = Stokes_IQUV()\ntruncation_type = δBGE(10, 2)\n\n# NAI2 Method\nmodel_NAI2 = make_mie_model(NAI2(), aero, λ, polarization_type, truncation_type)\n\n# PCW Method with saved/loaded Wigner tables\nwigner_file_path = \"PATH_TO_SAVED_WIGNER_MATRIX\"\nmodel_PCW = make_mie_model(PCW(), aero, λ, polarization_type, truncation_type, wigner_file_path)\n\n# PCW Method with newly computed Wigner tables\nwigner_A, wigner_B = compute_wigner_values(600) # Specify N_max\nmodel_PCW_computed_wigner = make_mie_model(PCW(), aero, λ, polarization_type, truncation_type, wigner_A, wigner_B)\n\n## \n## STEP 3: Perform the Mie Calculations\n## \n\naerosol_optics_NAI2 = compute_aerosol_optical_properties(model_NAI2);\naerosol_optics_PCW = compute_aerosol_optical_properties(model_PCW);\n","category":"page"},{"location":"pages/PhaseFunction/#Creating-the-Aerosol","page":"PhaseFunction","title":"Creating the Aerosol","text":"","category":"section"},{"location":"pages/PhaseFunction/","page":"PhaseFunction","title":"PhaseFunction","text":"make_univariate_aerosol","category":"page"},{"location":"pages/PhaseFunction/#RadiativeTransfer.PhaseFunction.make_univariate_aerosol","page":"PhaseFunction","title":"RadiativeTransfer.PhaseFunction.make_univariate_aerosol","text":"make_univariate_aerosol(size_distribution::ContinuousUnivariateDistribution, r_max, nquad_radius::Int, nᵣ, nᵢ)\n\nConvenience function to create a Univariate Aerosol, given the size parameters \n\n\n\n\n\n","category":"function"},{"location":"pages/PhaseFunction/#Creating/Saving-Wigner-Matrices-(if-using-PCW-method)","page":"PhaseFunction","title":"Creating/Saving Wigner Matrices (if using PCW method)","text":"","category":"section"},{"location":"pages/PhaseFunction/","page":"PhaseFunction","title":"PhaseFunction","text":"compute_wigner_values\nsave_wigner_values\nload_wigner_values","category":"page"},{"location":"pages/PhaseFunction/#RadiativeTransfer.PhaseFunction.compute_wigner_values","page":"PhaseFunction","title":"RadiativeTransfer.PhaseFunction.compute_wigner_values","text":"compute_wigner_values(m_max::Integer, n_max::Integer, l_max::Integer)\n\nCompute the Wigner 3j values for all (m, n, l) combinations up to m/n/l max, for  (m1, m2, m3) = (-1, 1, 0) (wignerA) and (-1, -1, 2) (wignerB)\n\n\n\n\n\ncompute_wigner_values(N_max)\n\nShorthand for computewignervalues(2Nmax + 1, Nmax + 1, 2N_max + 1)\n\n\n\n\n\n","category":"function"},{"location":"pages/PhaseFunction/#RadiativeTransfer.PhaseFunction.save_wigner_values","page":"PhaseFunction","title":"RadiativeTransfer.PhaseFunction.save_wigner_values","text":"save_wigner_values(filepath, wigner_A, wigner_B)\n\nSave the Wigner A and Wigner B matrices at the given filepath\n\n\n\n\n\n","category":"function"},{"location":"pages/PhaseFunction/#RadiativeTransfer.PhaseFunction.load_wigner_values","page":"PhaseFunction","title":"RadiativeTransfer.PhaseFunction.load_wigner_values","text":"load_wigner_values(filename)\n\nLoad the Wigner A and Wigner B matrices from the given filepath\n\n\n\n\n\n","category":"function"},{"location":"pages/PhaseFunction/#Defining-the-Mie-Computation-Model","page":"PhaseFunction","title":"Defining the Mie Computation Model","text":"","category":"section"},{"location":"pages/PhaseFunction/","page":"PhaseFunction","title":"PhaseFunction","text":"make_mie_model","category":"page"},{"location":"pages/PhaseFunction/#RadiativeTransfer.PhaseFunction.make_mie_model","page":"PhaseFunction","title":"RadiativeTransfer.PhaseFunction.make_mie_model","text":"make_mie_model(computation_type::NAI2, aerosol::AbstractAerosolType, λ::Real, polarization::AbstractPolarizationType, truncation_type::AbstractTruncationType)\n\nConvenience function to create Mie Model with NAI2 computation type \n\n\n\n\n\nmake_mie_model(computation_type::PCW, aerosol::AbstractAerosolType, λ::Real, polarization::AbstractPolarizationType, truncation_type::AbstractTruncationType, wigner_filepath::String)\n\nConvenience function to load Wigner matrices from file and create Mie Model with PCW computation type \n\n\n\n\n\nmake_mie_model(computation_type::PCW, aerosol::AbstractAerosolType, λ::Real, polarization::AbstractPolarizationType, truncation_type::AbstractTruncationType, wigner_A, wigner_B)\n\nConvenience function to take in Wigner matrices and create Mie Model with PCW computation type \n\n\n\n\n\n","category":"function"},{"location":"pages/PhaseFunction/#Computing-Aerosol-Optical-Properties","page":"PhaseFunction","title":"Computing Aerosol Optical Properties","text":"","category":"section"},{"location":"pages/PhaseFunction/","page":"PhaseFunction","title":"PhaseFunction","text":"compute_aerosol_optical_properties","category":"page"},{"location":"pages/PhaseFunction/#RadiativeTransfer.PhaseFunction.compute_aerosol_optical_properties","page":"PhaseFunction","title":"RadiativeTransfer.PhaseFunction.compute_aerosol_optical_properties","text":"compute_aerosol_optical_properties(model::MieModel{FDT}) where FDT<:NAI2\n\nReference: Suniti Sanghavi 2014, https://doi.org/10.1016/j.jqsrt.2013.12.015\n\nCompute the aerosol optical properties using the Siewert-NAI2 method Input: MieModel, holding all computation and aerosol properties  Output: AerosolOptics, holding all Greek coefficients and Cross-Sectional information\n\n\n\n\n\ncompute_aerosol_optical_properties(model::MieModel{FDT}) where FDT<:PCW\n\nReference: Suniti Sanghavi 2014, https://doi.org/10.1016/j.jqsrt.2013.12.015\n\nCompute the aerosol optical properties using the Domke-PCW method  Input: MieModel, holding all computation and aerosol properties  Output: AerosolOptics, holding all Greek coefficients and Cross-Sectional information\n\n\n\n\n\ncompute_aerosol_optical_properties(model::MieModel{FDT})\n\nReference: Suniti Sanghavi 2014, https://doi.org/10.1016/j.jqsrt.2013.12.015\n\nThis function enables user to specify whether to perform auto-differentiation (using either computation type) Input: MieModel, holding all computation and aerosol properties & autodiff flag (whether to perform  auto-differentiation) Output: AerosolOptics, holding all Greek coefficients and Cross-Sectional information\n\n\n\n\n\n","category":"function"},{"location":"pages/PhaseFunction/#Types","page":"PhaseFunction","title":"Types","text":"","category":"section"},{"location":"pages/PhaseFunction/#Aerosol-Types","page":"PhaseFunction","title":"Aerosol Types","text":"","category":"section"},{"location":"pages/PhaseFunction/","page":"PhaseFunction","title":"PhaseFunction","text":"UnivariateAerosol","category":"page"},{"location":"pages/PhaseFunction/#RadiativeTransfer.PhaseFunction.UnivariateAerosol","page":"PhaseFunction","title":"RadiativeTransfer.PhaseFunction.UnivariateAerosol","text":"struct UnivariateAerosol{FT}\n\nA struct which provides all univariate aerosol parameters needed for Mie  computation\n\nFields\n\nsize_distribution\nUnivariate size distribution\nr_max\nMaximum radius [μm]\nnquad_radius\nNumber of quadrature points for integration over size distribution\nnᵣ\nReal part of refractive Index\nnᵢ\nImaginary part of refractive Index\n\n\n\n\n\n","category":"type"},{"location":"pages/PhaseFunction/#Fourier-Decomposition-Computation-Types","page":"PhaseFunction","title":"Fourier Decomposition Computation Types","text":"","category":"section"},{"location":"pages/PhaseFunction/","page":"PhaseFunction","title":"PhaseFunction","text":"NAI2\nPCW","category":"page"},{"location":"pages/PhaseFunction/#RadiativeTransfer.PhaseFunction.NAI2","page":"PhaseFunction","title":"RadiativeTransfer.PhaseFunction.NAI2","text":"type NAI2\n\nPerform Siewart's numerical integration method, NAI-2, to compute aerosol phase function  decomposition. See: http://adsabs.harvard.edu/full/1982A%26A...109..195S\n\n\n\n\n\n","category":"type"},{"location":"pages/PhaseFunction/#RadiativeTransfer.PhaseFunction.PCW","page":"PhaseFunction","title":"RadiativeTransfer.PhaseFunction.PCW","text":"type PCW\n\nPerform Domke's Precomputed Wigner Symbols method, PCW, to compute aerosol phase function  decomposition. See: http://adsabs.harvard.edu/full/1984A%26A...131..237D\n\n\n\n\n\n","category":"type"},{"location":"pages/PhaseFunction/#Polarization-Types","page":"PhaseFunction","title":"Polarization Types","text":"","category":"section"},{"location":"pages/PhaseFunction/","page":"PhaseFunction","title":"PhaseFunction","text":"Stokes_IQUV\nStokes_IQU\nStokes_I","category":"page"},{"location":"pages/PhaseFunction/#RadiativeTransfer.PhaseFunction.Stokes_IQUV","page":"PhaseFunction","title":"RadiativeTransfer.PhaseFunction.Stokes_IQUV","text":"Use full Stokes Vector ([I,Q,U,V])\n\n\n\n\n\n","category":"type"},{"location":"pages/PhaseFunction/#RadiativeTransfer.PhaseFunction.Stokes_IQU","page":"PhaseFunction","title":"RadiativeTransfer.PhaseFunction.Stokes_IQU","text":"Use part of Stokes Vector ([I,Q,U])\n\n\n\n\n\n","category":"type"},{"location":"pages/PhaseFunction/#RadiativeTransfer.PhaseFunction.Stokes_I","page":"PhaseFunction","title":"RadiativeTransfer.PhaseFunction.Stokes_I","text":"Use scalar only ([I]):\n\n\n\n\n\n","category":"type"},{"location":"pages/PhaseFunction/#Truncation-Types","page":"PhaseFunction","title":"Truncation Types","text":"","category":"section"},{"location":"pages/PhaseFunction/","page":"PhaseFunction","title":"PhaseFunction","text":"δBGE","category":"page"},{"location":"pages/PhaseFunction/#RadiativeTransfer.PhaseFunction.δBGE","page":"PhaseFunction","title":"RadiativeTransfer.PhaseFunction.δBGE","text":"type δBGE{FT} <: AbstractTruncationType\n\nFields\n\nl_max\nTrunction length for legendre terms\nΔ_angle\nExclusion angle for forward peak (in fitting procedure) [degrees]\n\n\n\n\n\n","category":"type"},{"location":"pages/PhaseFunction/#Mie-Computation-Model-Type","page":"PhaseFunction","title":"Mie Computation Model Type","text":"","category":"section"},{"location":"pages/PhaseFunction/","page":"PhaseFunction","title":"PhaseFunction","text":"MieModel","category":"page"},{"location":"pages/PhaseFunction/#RadiativeTransfer.PhaseFunction.MieModel","page":"PhaseFunction","title":"RadiativeTransfer.PhaseFunction.MieModel","text":"type MieModel\n\nModel to hold all Mie computation details for NAI2 and PCW\n\nFields\n\ncomputation_type\naerosol\nλ\npolarization_type\ntruncation_type\nwigner_A\nDefault: zeros(1, 1, 1)\nwigner_B\nDefault: zeros(1, 1, 1)\n\n\n\n\n\n","category":"type"},{"location":"pages/PhaseFunction/#Output-Aerosol-Optics-Types","page":"PhaseFunction","title":"Output Aerosol Optics Types","text":"","category":"section"},{"location":"pages/PhaseFunction/","page":"PhaseFunction","title":"PhaseFunction","text":"GreekCoefs\nAerosolOptics","category":"page"},{"location":"pages/PhaseFunction/#RadiativeTransfer.PhaseFunction.GreekCoefs","page":"PhaseFunction","title":"RadiativeTransfer.PhaseFunction.GreekCoefs","text":"struct GreekCoefs{FT}\n\nA struct which holds all Greek coefficient lists (over l) in one object.  See eq 16 in Sanghavi 2014 for details. \n\nFields\n\nα\nGreek matrix coefficient α, is in B[2,2]\nβ\nGreek matrix coefficient β, is in B1,1\nγ\nGreek matrix coefficient γ, is in B[2,1],B[1,2]\nδ\nGreek matrix coefficient δ, is in B[4,4]\nϵ\nGreek matrix coefficient ϵ, is in B[3,4] and - in B[4,3]\nζ\nGreek matrix coefficient ζ, is in B[3,3]\n\n\n\n\n\n","category":"type"},{"location":"pages/PhaseFunction/#RadiativeTransfer.PhaseFunction.AerosolOptics","page":"PhaseFunction","title":"RadiativeTransfer.PhaseFunction.AerosolOptics","text":"struct AerosolOptics\n\nA struct which holds all computed aerosol optics\n\nFields\n\ngreek_coefs\nGreek matrix\nω̃\nSingle Scattering Albedo\nk\nExtinction coefficient\nderivs\nDerivatives Default: zeros(1)\n\n\n\n\n\n","category":"type"},{"location":"pages/tutorials/Tutorial_PhaseFunction/","page":"Simple Mie Phase Function Tutorial","title":"Simple Mie Phase Function Tutorial","text":"EditURL = \"https://github.com/RupeshJey/RadiativeTransfer.jl/blob/master/docs/src/pages/tutorials/Tutorial_PhaseFunction.jl\"","category":"page"},{"location":"pages/tutorials/Tutorial_PhaseFunction/#Simple-Mie-Phase-Function-Tutorial","page":"Simple Mie Phase Function Tutorial","title":"Simple Mie Phase Function Tutorial","text":"","category":"section"},{"location":"pages/tutorials/Tutorial_PhaseFunction/","page":"Simple Mie Phase Function Tutorial","title":"Simple Mie Phase Function Tutorial","text":"This is just the first test, more to follow.","category":"page"},{"location":"pages/tutorials/Tutorial_PhaseFunction/","page":"Simple Mie Phase Function Tutorial","title":"Simple Mie Phase Function Tutorial","text":"","category":"page"},{"location":"pages/tutorials/Tutorial_PhaseFunction/","page":"Simple Mie Phase Function Tutorial","title":"Simple Mie Phase Function Tutorial","text":"In the following, we will just walk through how to compute greek coefficients (which will be require for radiative transfer calculations) as well as actual phase matrices from the Mie theory.","category":"page"},{"location":"pages/tutorials/Tutorial_PhaseFunction/","page":"Simple Mie Phase Function Tutorial","title":"Simple Mie Phase Function Tutorial","text":"","category":"page"},{"location":"pages/tutorials/Tutorial_PhaseFunction/","page":"Simple Mie Phase Function Tutorial","title":"Simple Mie Phase Function Tutorial","text":"First let's use the required packages","category":"page"},{"location":"pages/tutorials/Tutorial_PhaseFunction/","page":"Simple Mie Phase Function Tutorial","title":"Simple Mie Phase Function Tutorial","text":"using RadiativeTransfer.PhaseFunction\nusing Distributions\nusing Plots","category":"page"},{"location":"pages/tutorials/Tutorial_PhaseFunction/","page":"Simple Mie Phase Function Tutorial","title":"Simple Mie Phase Function Tutorial","text":"# Aerosol particle distribution and properties\nμ  = 0.3        ## Log-normal median radius [μm]\nσ  = 2.0        ## Log-normal stddev of radius\nr_max = 30.0    ## Maximum radius [μm]\nn  = 2500       ## Number of quadrature points for integrating of size dist.\nnᵣ = 1.3        ## Real part of refractive index\nnᵢ = 0.0        ## Imag part of refractive index (sign changed, use only + here)\n\n# Create a Size Distribution (from Julia's Distributions package)\nsize_distribution = LogNormal(log(μ), log(σ))\n\n# Create the aerosol\naero = make_univariate_aerosol(size_distribution, r_max, n, nᵣ, nᵢ)","category":"page"},{"location":"pages/tutorials/Tutorial_PhaseFunction/","page":"Simple Mie Phase Function Tutorial","title":"Simple Mie Phase Function Tutorial","text":"λ = 0.55                             ## Incident wavelength [μm]\npolarization_type = Stokes_IQUV()    ## Polarization type\ntruncation_type   = δBGE(20, 2)      ## Truncation type","category":"page"},{"location":"pages/tutorials/Tutorial_PhaseFunction/","page":"Simple Mie Phase Function Tutorial","title":"Simple Mie Phase Function Tutorial","text":"# Create a Mie model, using the Siewert method NAI2\nmodel_NAI2 = make_mie_model(NAI2(), aero, λ, polarization_type, truncation_type)","category":"page"},{"location":"pages/tutorials/Tutorial_PhaseFunction/","page":"Simple Mie Phase Function Tutorial","title":"Simple Mie Phase Function Tutorial","text":"# Compute aerosol optical properties:\naerosol_optics_NAI2 = compute_aerosol_optical_properties(model_NAI2);\nnothing #hide","category":"page"},{"location":"pages/tutorials/Tutorial_PhaseFunction/","page":"Simple Mie Phase Function Tutorial","title":"Simple Mie Phase Function Tutorial","text":"","category":"page"},{"location":"pages/tutorials/Tutorial_PhaseFunction/","page":"Simple Mie Phase Function Tutorial","title":"Simple Mie Phase Function Tutorial","text":"simple example of how to use the Documentation, add ? in front and get the DocStrings of aerosolopticsNAI2 :","category":"page"},{"location":"pages/tutorials/Tutorial_PhaseFunction/#?aerosol*optics*NAI2-#-(Remove-comment)","page":"Simple Mie Phase Function Tutorial","title":"?aerosolopticsNAI2 # (Remove comment)","text":"","category":"section"},{"location":"pages/tutorials/Tutorial_PhaseFunction/","page":"Simple Mie Phase Function Tutorial","title":"Simple Mie Phase Function Tutorial","text":"","category":"page"},{"location":"pages/tutorials/Tutorial_PhaseFunction/#Let's-plot-the-greek-coefficients","page":"Simple Mie Phase Function Tutorial","title":"Let's plot the greek coefficients","text":"","category":"section"},{"location":"pages/tutorials/Tutorial_PhaseFunction/","page":"Simple Mie Phase Function Tutorial","title":"Simple Mie Phase Function Tutorial","text":"which are basically giving us the legendre decomposition of the phase matrix components:","category":"page"},{"location":"pages/tutorials/Tutorial_PhaseFunction/","page":"Simple Mie Phase Function Tutorial","title":"Simple Mie Phase Function Tutorial","text":"using Parameters\n@unpack α,β,γ,δ,ϵ,ζ = aerosol_optics_NAI2.greek_coefs\np1 = plot(α,  title=\"α\")\np2 = plot(β,  title=\"β\")\np3 = plot(γ,  title=\"γ\")\np4 = plot(δ,  title=\"δ\")\np5 = plot(ϵ,  title=\"ϵ\")\np6 = plot(ζ,  title=\"ζ\")\nplot(p1, p2, p3, p4, p5, p6, layout=(3, 2), legend=false)\nxlims!(0,100)","category":"page"},{"location":"pages/tutorials/Tutorial_PhaseFunction/","page":"Simple Mie Phase Function Tutorial","title":"Simple Mie Phase Function Tutorial","text":"using FastGaussQuadrature\nμ, w_μ = gausslegendre(1000)\n# Reconstruct Phase Functions from greek coefficients (overkill for Siewert, mostly for Wigner method)\nf₁₁, f₁₂, f₂₂, f₃₃, f₃₄, f₄₄ = PhaseFunction.reconstruct_phase(aerosol_optics_NAI2.greek_coefs, μ);\nnothing #hide","category":"page"},{"location":"pages/tutorials/Tutorial_PhaseFunction/","page":"Simple Mie Phase Function Tutorial","title":"Simple Mie Phase Function Tutorial","text":"","category":"page"},{"location":"pages/tutorials/Tutorial_PhaseFunction/#Plot-only-phase-function-for-I-(f)-and-the-I-Q-transition-in-the-phase-matrix-(f)-for-the-Stokes-Vector-[I,Q,U,V]","page":"Simple Mie Phase Function Tutorial","title":"Plot only phase function for I (f₁₁) and the I -> Q transition in the phase matrix (f₁₂) for the Stokes Vector [I,Q,U,V]","text":"","category":"section"},{"location":"pages/tutorials/Tutorial_PhaseFunction/","page":"Simple Mie Phase Function Tutorial","title":"Simple Mie Phase Function Tutorial","text":"p1 = plot(μ, f₁₁, yscale=:log10, title=\"f₁₁\")\np2 = plot(μ, f₁₂ ./ f₁₁,  title=\"f₁₂/f₁₁\")\n\nplot(p1, p2, layout=(2, 1), legend=false)\nxlabel!(\"cos(Θ)\")","category":"page"},{"location":"pages/tutorials/Tutorial_PhaseFunction/","page":"Simple Mie Phase Function Tutorial","title":"Simple Mie Phase Function Tutorial","text":"anim = @animate for r = 0.3:0.2:5\n    local size_distribution = LogNormal(log(r), log(σ))\n    # Create the aerosol\n    local aero       = make_univariate_aerosol(size_distribution, r_max, n, nᵣ, nᵢ)\n    local model_NAI2 = make_mie_model(NAI2(), aero, λ, polarization_type, truncation_type)\n    local aerosol_optics_NAI2 = compute_aerosol_optical_properties(model_NAI2);\n    local f₁₁, f₁₂, f₂₂, f₃₃, f₃₄, f₄₄ = PhaseFunction.reconstruct_phase(aerosol_optics_NAI2.greek_coefs, μ);\n    # @show f₁₁[1]\n    p1 = plot(μ, f₁₁, yscale=:log10, title=\"f₁₁\", label=\"r(μm)=$r\")\n    ylims!(1e-3, 1e3)\n    p2 = plot(μ, f₁₂ ./ f₁₁,  title=\"f₁₂/f₁₁\", label=\"Q/I\")\n    ylims!(-1.1, 1.1)\n    plot(p1, p2, layout=(2, 1))\nend","category":"page"},{"location":"pages/tutorials/Tutorial_PhaseFunction/","page":"Simple Mie Phase Function Tutorial","title":"Simple Mie Phase Function Tutorial","text":"gif(anim, fps = 5)","category":"page"},{"location":"pages/tutorials/Tutorial_PhaseFunction/","page":"Simple Mie Phase Function Tutorial","title":"Simple Mie Phase Function Tutorial","text":"","category":"page"},{"location":"pages/tutorials/Tutorial_PhaseFunction/","page":"Simple Mie Phase Function Tutorial","title":"Simple Mie Phase Function Tutorial","text":"This page was generated using Literate.jl.","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"EditURL = \"https://github.com/RupeshJey/RadiativeTransfer.jl/blob/master/docs/src/pages/tutorials/Tutorial_CrossSection.jl\"","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/#Cross-Section-Module-Tutorial:-Spectral-Line-Shapes","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"","category":"section"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"Part of ESE 156 Remote Sensing Class; 2020; Christian Frankenberg","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"The purpose of this tutorial is to learn how to compute line-shapes (in our case mostly of rotational-vibrational transition lines), what processes determine line-shapes and how the dependencies in the line-shape on pressure and temperature could actually be used to our advantage in a retrieval system.","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/#Basic-Tools","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Basic Tools","text":"","category":"section"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"We are making use of the HITRAN database, see a list of tutorials here","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"There are other spectroscopic linelists but we are focusing on HITRAN only here. In addition, there are more complex line-shapes that we are not treating here, including collisional narrowing, line-mixing, collision-induced absorption (CIA).","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/#Line-shape-(background-covered-in-class):","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Line-shape (background covered in class):","text":"","category":"section"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"If we have a line-strength S (in cm^-1 cm^2/molecule) for a specific transition at nu_0, we can compute the cross section as:","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"sigma(nu) = SPhi(nu-nu_0)","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"where Phi(nu-nu_0) denotes the line-shape function (in 1/cm^-1), which is normalized to 1:","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"int_-infty^infty Phi(nu-nu_0) dnu=1","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"There are several processes that affect the shape and width of Phi and we will walk through the most important ones here now.","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/#Doppler-Broadening","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Doppler Broadening","text":"","category":"section"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"Doppler broadening is caused by a simple doppler shift of emitted and absorbed frequencies, caused by the relative velocities of the molecules along the line of sight. A doppler shifted apparent frequency from the centroid frequency nu_0 can be described as:","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"nu = nu_0left(1+fracv_rcright)","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"where v_r is the relative velocity of the absorbing photon along the line of sight. The doppler shift is then simply","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"Deltanu = nu_0fracv_rc","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"Let us take a simple example with the satellite flying at 7km/s and either staring into the flight direction (technically, it wouldn't see the atmosphere then but let's ignore this) or looking into the back:","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"____","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"# Speed of light (in m/s)\nc = 299792458.0\n\n# Relative velocity (in m/s)\nvᵣ = 7000.0\n\n# Center wavenumber (say 1600nm, which is 1e7/1600=6250 cm$^{-1}$)\nv₀ = 6250.0\n\n# Doppler shift:\nΔ_ν = ( v₀ * vᵣ) / c\n\n# Just writing out doppler shift in wavenumbers and wavelengths\nprintln(\"Doppler shift = $Δ_ν cm-1\")\nprintln(\"Doppler shift = $(1e7/(v₀-Δ_ν)-1e7/v₀) nm\")","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/#Random-movements-of-molecules-in-gases-lead-to-doppler-broadening-effects","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Random movements of molecules in gases lead to doppler broadening effects","text":"","category":"section"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"In the one-dimensional case along say the x-axis (we only observe the distribution along one line of sight), the speed of molecules is distributed according to the Maxwell-Boltzmann distribution:","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"f(v_x) = sqrtfracm2pi kTexpleft(-fracmv_x^22kTright)","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"We can then define a Doppler width Delta nu_D as","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"Delta nu_D = fracnu_0csqrtfrac2kTm= fracnu_0csqrtfrac2RTM","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"which yields the following line-shape:","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"phi_D(nu) = frac1Delta nu_D sqrtpiexpleft(-frac(nu-nu_0)^2Delta nu^2_Dright)=","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"which is a Gaussian distribution.","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"Let us put in some numbers with R=8.3144598 J/K/mol at 6000cm^-1:","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"<li>T = 220K, 290K","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"<li>M = 16g/mol (CH4) or 44g/mol (CO_2)","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"Delta nu_D(290KCO_2)=00066cm^-1","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"Delta nu_D(220KCO_2)=00058cm^-1","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"Delta nu_D(290KCH_4)=00110cm^-1","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"Delta nu_D(290KCH_4)=00096cm^-1","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"Multitply with about 1.6585 (2sqrtln(2)) to get FWHM","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/#Natural-and-collisional-broadening","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Natural and collisional broadening","text":"","category":"section"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"Due to the Heisenberg principle","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"Delta E Delta t sim h2pi","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"As Delta E is hDeltanu, we can write:","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"Deltanu = frach2pitau","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"The natural line-width is defined by using the radiative lifetime but this is mostly negligible as the natural lifetime of the upper state is usually much much smaller than the \"perturbed\" lifetime in the presence of quencher (e.g. through collisions). Again, there are exceptions.","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"Collisions between molecules reduce the lifetime of the upper state, thus widening the line width. This behavor gives rise to the so-called Lorentz lineshape.","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"phi_L(nu) = fracalpha_Lpi left(nu-nu_0)^2+alpha_L^2right","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"alpha_L depends linearly on the number density of the perturbing molecules and the relative speed of the collision partners (thus scales linearly with pressure and with sqrtT, basically both density and velocity affect the number of collisions per time).","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/#Voigt-lineshape","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Voigt lineshape","text":"","category":"section"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"The Voigt line-shape is the combination of Doppler and Pressure broadening (convolution of the two) but cannot be evaluated analytically. However, there are numerical routines to compute it efficiently.","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/#Other-more-complex-lineshapes","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Other more complex lineshapes","text":"","category":"section"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"Once you dig deeper, there are various other more complex line-shapes (and line-mixing effects), which we ignore for now as the Voigt line-shape can provide very reasonable results. See, for instance, here","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"using Plots\nusing Pkg.Artifacts\nusing RadiativeTransfer\nusing RadiativeTransfer.CrossSection","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"co2_par = CrossSection.read_hitran(artifact(\"CO2\"), mol=2, iso=1, ν_min=6214.4, ν_max=6214.8);\nline_voigt   = make_hitran_model(co2_par, Voigt())\nline_doppler = make_hitran_model(co2_par, Doppler())\nline_lorentz = make_hitran_model(co2_par, Lorentz())\n# Specify our wavenumber grid\nν = 6210:0.001:6220;\nnothing #hide","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"cs_co2_1atm   = absorption_cross_section(line_voigt, ν, 1013.0     , 296.0);\ncs_co2_075atm = absorption_cross_section(line_voigt, ν, 0.75*1013.0, 296.0);\ncs_co2_05atm  = absorption_cross_section(line_voigt, ν, 0.5*1013.0 , 296.0);\ncs_co2_025atm = absorption_cross_section(line_voigt, ν, 0.25*1013.0, 296.0);\ncs_co2_01atm  = absorption_cross_section(line_voigt, ν, 0.1*1013.0 , 296.0);\n\n#Get some more line-shapes just for Doppler and Voigt\ncs_co2_01atm    = absorption_cross_section(line_voigt,   ν, 0.1*1013.0 , 296.0);\ncs_co2_doppler  = absorption_cross_section(line_doppler, ν, 0.1*1013.0 , 296.0);\ncs_co2_lorentz  = absorption_cross_section(line_lorentz, ν, 0.1*1013.0 , 296.0);\nnothing #hide","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"#plotly()\nff = 1e20;\nplot(ν,  ff*cs_co2_1atm,   label=\"Voigt, 1atm\", yformatter = :scientific)\nplot!(ν, ff*cs_co2_075atm, label=\"Voigt, 0.75atm\")\nplot!(ν, ff*cs_co2_05atm,  label=\"Voigt, 0.5atm\")\nplot!(ν, ff*cs_co2_025atm, label=\"Voigt, 0.25atm\")\n\nxlims!((6214,6215.2))\nxlabel!(\"Wavenumber (cm⁻¹))\")","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"plot( ν, cs_co2_01atm   /maximum(cs_co2_01atm) ,label=\"Voigt, 296K, 0.1atm\")\nplot!(ν, cs_co2_doppler /maximum(cs_co2_01atm) ,label=\"Doppler, 296K\")\nplot!(ν, cs_co2_lorentz /maximum(cs_co2_01atm) ,label=\"Lorentz, 296K, 0.1atm\")\nxlims!((6214.4,6214.8))\n\nylabel!(\"σ/max(σ)\")\nxlabel!(\"Wavenumber (cm⁻¹)\")","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/#From-an-individual-line-to-a-band","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"From an individual line to a band","text":"","category":"section"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"Here, we will just compute an entire band of CO_2 (a few to be precise) and look at some simple behavior, e.g. the re-distribution of individual lines in the P and R branch with changing temperature.","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"co2_par_band = CrossSection.read_hitran(artifact(\"CO2\"), mol=2, iso=1, ν_min=6000.0, ν_max=6400.0);\nband_voigt   = make_hitran_model(co2_par_band , Voigt())","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"ν_band = 6300:0.01:6400;\nσ_co2_Voigt220 = absorption_cross_section(band_voigt, ν_band, 1013.0 , 220.0);\nσ_co2_Voigt290 = absorption_cross_section(band_voigt, ν_band, 1013.0 , 290.0);\nnothing #hide","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"plot( ν_band, ff*σ_co2_Voigt220, alpha=0.5, label=\"220K\")\nplot!(ν_band, ff*σ_co2_Voigt290, alpha=0.5, label=\"290K\")\nxlims!((6300,6380))","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"plot(ν_band, ff*(σ_co2_Voigt220 - σ_co2_Voigt290), label=\"220K-290K\")\nxlims!((6300,6380))","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"Think about this temperature dependence!! <li> Why is it there? <li> Can you see the P and R branch? <li> Can you identify different J levels?","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/#Some-fun-stuff","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Some fun stuff","text":"","category":"section"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"T = 290.0\n@gif for p = 10:10:1100\n    σ = absorption_cross_section(band_voigt, ν_band, p , T);\n    plot(ν_band, ff*σ, yaxis=:log,label=\"p=$p\")\n    ylims!((1e-7, 1e-1))\nend","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"p = 900.0\n@gif for T = 10:10:320\n    σ = absorption_cross_section(band_voigt, ν_band, p , T);\n    plot(ν_band, ff*σ, yaxis=:log, label=\"T=$T\")\n    ylims!((1e-7, 1e-1))\nend","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"# More extreme case, let's take 10 atmospheres (10,000hPa)\nσ = absorption_cross_section(band_voigt, ν_band, 10000.0 , 300.0);\nplot(ν_band, ff*σ, label=\"p=10000.0hPa\")","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"","category":"page"},{"location":"pages/tutorials/Tutorial_CrossSection/","page":"Cross-Section Module Tutorial: Spectral Line Shapes","title":"Cross-Section Module Tutorial: Spectral Line Shapes","text":"This page was generated using Literate.jl.","category":"page"},{"location":"#Home","page":"Home","title":"Home","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"RadiativeTransfer.jl aims to revamp and modernize key atmospheric remote sensing tools. Specifically, it will enable the fast computation of atmospheric optical properties, full-polarized radiative transfer simulations, and commonly-used inversion routines. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"By taking advantage of modern software tools, such as GPU acceleration and HPC computing, the software suite significantly accelerates computationally-intensive calculations and models, while keeping the interface easy-to-use for researchers and students.","category":"page"},{"location":"pages/CrossSection/#Cross-Section-Module","page":"CrossSection","title":"Cross-Section Module","text":"","category":"section"},{"location":"pages/CrossSection/#Introduction","page":"CrossSection","title":"Introduction","text":"","category":"section"},{"location":"pages/CrossSection/","page":"CrossSection","title":"CrossSection","text":"This module enables absorption cross-section calculations of atmospheric gases at different pressures, temperatures, and broadeners (Doppler, Lorentzian, Voigt). It uses the HITRAN energy transition database for calculations. While it enables lineshape calculations from scratch, it also allows users to create and save an interpolator object at specified wavelength, pressure, and temperature grids. It can perform these computations either on CPU or GPU (CUDA).","category":"page"},{"location":"pages/CrossSection/","page":"CrossSection","title":"CrossSection","text":"You can calculate an absorption cross-section in three steps: ","category":"page"},{"location":"pages/CrossSection/","page":"CrossSection","title":"CrossSection","text":"Use read_hitran to read in a HITRAN database file\nUse make_hitran_model or make_interpolation_model to set up model parameters for the cross-section calculation\nUse absorption_cross_section to perform the cross-section calculation using the defined model settings","category":"page"},{"location":"pages/CrossSection/#Example","page":"CrossSection","title":"Example","text":"","category":"section"},{"location":"pages/CrossSection/","page":"CrossSection","title":"CrossSection","text":"using RadiativeTransfer\nusing RadiativeTransfer.CrossSection\n\n## \n## STEP 1: Get the Hitran data\n## \n\n# If you have a fixed-width file stored locally\nhitran_data = read_hitran(\"path/to/file\", mol=2, iso=1, ν_min=6000, ν_max=6400)\n\n# If you would like to download the file from the hitran database\nhitran_data = read_hitran(artifact\"hitran_molec_id_2_CO2\", mol=2, iso=1, ν_min=6000, ν_max=6400)\n\n## \n## STEP 2: Create a model from parameters\n## \n\n# These are some example models, but you can create/customize your model however you'd like. \n# Please see make_hitran_model documentation for optional arguments\nmodel_doppler = make_hitran_model(hitran_data, Doppler())\nmodel_lorentz = make_hitran_model(hitran_data, Lorentz())\nmodel_voigt_CPU = make_hitran_model(hitran_data, Voigt())\nmodel_voigt_GPU = make_hitran_model(hitran_data, Voigt(), architecture=Architectures.GPU())\n\n# If you would prefer to create an interpolation, and then interpolate the cross-section \n# at other wavelengths/pressures/temperatures, you can use make_interpolation_model as such:\n\nν_grid = 6000:0.01:6400\npressures = 250:250:1250\ntemperatures = 100:75:400\n\nmodel_interp = make_interpolation_model(hitran_data, Voigt(), ν_grid, pressures, temperatures)\n\n# Note: please see make_interpolation_model documentation for optional parameters\n\n## \n## STEP 3: Calculate the absorption cross section with the created model\n## \n\n# You can specify the wavelength grid, pressure, and temperature. \nabsorption_cross_section(model_*, 6000:0.01:6400, 1000.1, 296.1)\n","category":"page"},{"location":"pages/CrossSection/#Reading-HITRAN-Files","page":"CrossSection","title":"Reading HITRAN Files","text":"","category":"section"},{"location":"pages/CrossSection/","page":"CrossSection","title":"CrossSection","text":"read_hitran","category":"page"},{"location":"pages/CrossSection/#RadiativeTransfer.CrossSection.read_hitran","page":"CrossSection","title":"RadiativeTransfer.CrossSection.read_hitran","text":"read_hitran(filepath::String, mol::Int=-1, iso::Int=-1, ν_min::Real=0, ν_max::Real=Inf)\n\nRead/parse a HITRAN data file and return the data in HitranTable format\n\n\n\n\n\n","category":"function"},{"location":"pages/CrossSection/#Defining-Models-with-Cross-Section-Parameters","page":"CrossSection","title":"Defining Models with Cross-Section Parameters","text":"","category":"section"},{"location":"pages/CrossSection/","page":"CrossSection","title":"CrossSection","text":"make_hitran_model\nmake_interpolation_model","category":"page"},{"location":"pages/CrossSection/#RadiativeTransfer.CrossSection.make_hitran_model","page":"CrossSection","title":"RadiativeTransfer.CrossSection.make_hitran_model","text":"make_hitran_model(hitran::HitranTable, \n                  broadening::AbstractBroadeningFunction; \n                  wing_cutoff::Real=40, \n                  vmr::Real=0, \n                  CEF::AbstractComplexErrorFunction=HumlicekWeidemann32SDErrorFunction(), \n                  architecture = default_architecture)\n\nConvenience function to make a HitranModel out of the parameters (Matches makeinterpolationmodel)\n\n\n\n\n\n","category":"function"},{"location":"pages/CrossSection/#RadiativeTransfer.CrossSection.make_interpolation_model","page":"CrossSection","title":"RadiativeTransfer.CrossSection.make_interpolation_model","text":"make_interpolation_model(hitran::HitranTable, \n                broadening::AbstractBroadeningFunction, \n                wave_grid::AbstractRange{<:Real}, \n                p_grid::AbstractRange{<:Real},\n                t_grid::AbstractRange{<:Real}; \n                wavelength_flag::Bool=false,\n                wing_cutoff::Real=40, \n                vmr::Real=0, \n                CEF::AbstractComplexErrorFunction=HumlicekWeidemann32SDErrorFunction(),\n                architecture::AbstractArchitecture=default_architecture )\n\nUsing a HitranModel, create an InterpolationModel by interpolating the lineshape function  at the given pressure and temperature grids\n\n\n\n\n\n","category":"function"},{"location":"pages/CrossSection/#Computing-Absorption-Cross-Sections","page":"CrossSection","title":"Computing Absorption Cross-Sections","text":"","category":"section"},{"location":"pages/CrossSection/","page":"CrossSection","title":"CrossSection","text":"absorption_cross_section","category":"page"},{"location":"pages/CrossSection/#RadiativeTransfer.CrossSection.absorption_cross_section","page":"CrossSection","title":"RadiativeTransfer.CrossSection.absorption_cross_section","text":"absorption_cross_section(model::HitranModel, grid::AbstractRange{<:Real}, pressure::Real, temperature::Real; wavelength_flag::Bool=false)\n\nGiven a HitranModel, return the calculated absorption cross-section at the given pressure,  temperature, and grid of wavelengths (or wavenumbers)\n\n\n\n\n\nabsorption_cross_section(model::InterpolationModel, grid::AbstractRange{<:Real}, pressure::Real, temperature::Real; wavelength_flag::Bool=false)\n\nGiven an Interpolation Model, return the interpolated absorption cross-section at the given pressure,  temperature, and grid of wavelengths (or wavenumbers)\n\n\n\n\n\nabsorption_cross_section(model::HitranModel, grid::AbstractRange{<:Real}, pressure::Real, temperature::Real; wavelength_flag::Bool=false)\n\nCalculate absorption cross-section at the given pressure, temperature, and grid of wavelengths  (or wavenumbers), and have the option to perform auto-differentiation\n\n\n\n\n\n","category":"function"},{"location":"pages/CrossSection/#Types","page":"CrossSection","title":"Types","text":"","category":"section"},{"location":"pages/CrossSection/#Hitran-Data-Structure-Type","page":"CrossSection","title":"Hitran Data Structure Type","text":"","category":"section"},{"location":"pages/CrossSection/","page":"CrossSection","title":"CrossSection","text":"HitranTable","category":"page"},{"location":"pages/CrossSection/#RadiativeTransfer.CrossSection.HitranTable","page":"CrossSection","title":"RadiativeTransfer.CrossSection.HitranTable","text":"struct HitranTable{FT}\n\nA struct, which provides all HITRAN line parameters needed to compute  absorption cross sections\n\nSee https://hitran.org/docs/definitions-and-units/ for details\n\nFields\n\nmol\nThe molecular species identification (ID) number\niso\nThe isotopologue ID number\nνᵢ\nThe wavenumber of the spectral line transition (cm-1) in vacuum\nSᵢ\nThe spectral line intensity (cm−1/(molecule·cm−2)) at Tref=296K\nAᵢ\nThe Einstein-A coefficient (s-1) of a transition\nγ_air\nThe air-broadened half width at half maximum (HWHM) (cm−1/atm) at Tref=296K and reference pressure pref=1atm\nγ_self\nThe self-broadened half width at half maximum (HWHM) (cm−1/atm) at Tref=296K and reference pressure pref=1atm\nE″\nThe lower-state energy of the transition (cm-1)\nn_air\nThe coefficient of the temperature dependence of the air-broadened half width\nδ_air\nThe pressure shift (cm−1/atm) at Tref=296K and pref=1atm of the line position with respect to the vacuum transition wavenumber νij\nglobal_upper_quanta\nThe electronic and vibrational quantum numbers and labels for the upper state of a transition\nglobal_lower_quanta\nThe electronic and vibrational quantum numbers and labels for the lower state of a transition\nlocal_upper_quanta\nRotational, hyperfine and other quantum numbers and labels for the upper state of a transition\nlocal_lower_quanta\nRotational, hyperfine and other quantum numbers and labels for the lower state of a transition\nierr\nOrdered list of indices corresponding to uncertainty estimates of transition parameters\niref\nOrdered list of reference identifiers for transition parameters\nline_mixing_flag\nA flag indicating the presence of additional data and code relating to line-mixing\ng′\nThe upper state degeneracy\ng″\nThe lower state degeneracy\n\n\n\n\n\n","category":"type"},{"location":"pages/CrossSection/#Broadening-Function-Types","page":"CrossSection","title":"Broadening Function Types","text":"","category":"section"},{"location":"pages/CrossSection/","page":"CrossSection","title":"CrossSection","text":"Doppler\nLorentz\nVoigt","category":"page"},{"location":"pages/CrossSection/#RadiativeTransfer.CrossSection.Doppler","page":"CrossSection","title":"RadiativeTransfer.CrossSection.Doppler","text":"Doppler line broadening\n\n\n\n\n\n","category":"type"},{"location":"pages/CrossSection/#RadiativeTransfer.CrossSection.Lorentz","page":"CrossSection","title":"RadiativeTransfer.CrossSection.Lorentz","text":"Lorentz line broadening\n\n\n\n\n\n","category":"type"},{"location":"pages/CrossSection/#RadiativeTransfer.CrossSection.Voigt","page":"CrossSection","title":"RadiativeTransfer.CrossSection.Voigt","text":"Voigt line broadening\n\n\n\n\n\n","category":"type"},{"location":"pages/CrossSection/#Complex-Error-Function-Types","page":"CrossSection","title":"Complex Error Function Types","text":"","category":"section"},{"location":"pages/CrossSection/","page":"CrossSection","title":"CrossSection","text":"HumlicekErrorFunction\nHumlicekWeidemann32VoigtErrorFunction\nHumlicekWeidemann32SDErrorFunction\nCPF12ErrorFunction\nErfcHumliErrorFunctionVoigt\nErfcHumliErrorFunctionSD\nErfcErrorFunction","category":"page"},{"location":"pages/CrossSection/#RadiativeTransfer.CrossSection.HumlicekErrorFunction","page":"CrossSection","title":"RadiativeTransfer.CrossSection.HumlicekErrorFunction","text":"Humlicek only formulation for Complex Error Function\n\n\n\n\n\n","category":"type"},{"location":"pages/CrossSection/#RadiativeTransfer.CrossSection.HumlicekWeidemann32VoigtErrorFunction","page":"CrossSection","title":"RadiativeTransfer.CrossSection.HumlicekWeidemann32VoigtErrorFunction","text":"Mix of Humlicek and Weidemann (N=32) Error Function, suggested for Voigt function\n\n\n\n\n\n","category":"type"},{"location":"pages/CrossSection/#RadiativeTransfer.CrossSection.HumlicekWeidemann32SDErrorFunction","page":"CrossSection","title":"RadiativeTransfer.CrossSection.HumlicekWeidemann32SDErrorFunction","text":"Mix of Humlicek and Weidemann (N=32) Error Function, suggested for Speed Dependent Voigt function\n\n\n\n\n\n","category":"type"},{"location":"pages/CrossSection/#RadiativeTransfer.CrossSection.CPF12ErrorFunction","page":"CrossSection","title":"RadiativeTransfer.CrossSection.CPF12ErrorFunction","text":"Humlicek with a single rational approximation.\n\n\n\n\n\n","category":"type"},{"location":"pages/CrossSection/#RadiativeTransfer.CrossSection.ErfcHumliErrorFunctionVoigt","page":"CrossSection","title":"RadiativeTransfer.CrossSection.ErfcHumliErrorFunctionVoigt","text":"Mix of Humplicek and erfc Special Function for Voigt\n\n\n\n\n\n","category":"type"},{"location":"pages/CrossSection/#RadiativeTransfer.CrossSection.ErfcHumliErrorFunctionSD","page":"CrossSection","title":"RadiativeTransfer.CrossSection.ErfcHumliErrorFunctionSD","text":"Mix of Humplicek and erfc Special Function for Voigt\n\n\n\n\n\n","category":"type"},{"location":"pages/CrossSection/#RadiativeTransfer.CrossSection.ErfcErrorFunction","page":"CrossSection","title":"RadiativeTransfer.CrossSection.ErfcErrorFunction","text":"erfc Special Function for Voigt\n\n\n\n\n\n","category":"type"},{"location":"pages/CrossSection/#Cross-Section-Model-Types","page":"CrossSection","title":"Cross-Section Model Types","text":"","category":"section"},{"location":"pages/CrossSection/","page":"CrossSection","title":"CrossSection","text":"HitranModel\nInterpolationModel","category":"page"},{"location":"pages/CrossSection/#RadiativeTransfer.CrossSection.HitranModel","page":"CrossSection","title":"RadiativeTransfer.CrossSection.HitranModel","text":"struct HitranModel{FT}\n\nA struct which provides all model parameters needed for cross-section  calculations using HITRAN data\n\nFields\n\nhitran\nStruct with hitran data\nbroadening\nBroadening function (Doppler/Lorentz/Voigt)\nwing_cutoff\nWing cutoff [cm-1]\nvmr\nVMR of gas itself [0-1]\nCEF\nComplex Error Function to Use\narchitecture\nComputer Architecture on which Model is run\n\n\n\n\n\n","category":"type"},{"location":"pages/CrossSection/#RadiativeTransfer.CrossSection.InterpolationModel","page":"CrossSection","title":"RadiativeTransfer.CrossSection.InterpolationModel","text":"struct InterpolationModel{FT}\n\nA struct which provides all model parameters needed for cross-section  calculations using an Interpolator\n\nFields\n\nitp\nThe interpolator\nmol\nThe molecular species identification (ID) number\niso\nThe isotopologue ID number\nbroadening\nBroadening function (Doppler/Lorentz/Voigt), as a string\nν_grid\nWavelength grids\np_grid\nWavelength grids\nt_grid\nWavelength grids\nwing_cutoff\nWing cutoff [cm-1]\nvmr\nVMR of gas itself [0-1]\nCEF\nComplex Error Function to Use\narchitecture\nComputer Architecture on which Model is run\n\n\n\n\n\n","category":"type"}]
}
