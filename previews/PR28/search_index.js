var documenterSearchIndex = {"docs":
[{"location":"#Home","page":"Home","title":"Home","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"RadiativeTransfer.jl aims to revamp and modernize key atmospheric remote sensing tools. Specifically, it will enable the fast computation of atmospheric optical properties, full-polarized radiative transfer simulations, and commonly-used inversion routines. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"By taking advantage of modern software tools, such as GPU acceleration and HPC computing, the software suite significantly accelerates computationally-intensive calculations and models, while keeping the interface easy-to-use for researchers and students.","category":"page"},{"location":"pages/CrossSection/#Cross-Section-Module","page":"CrossSection","title":"Cross-Section Module","text":"","category":"section"},{"location":"pages/CrossSection/#Introduction","page":"CrossSection","title":"Introduction","text":"","category":"section"},{"location":"pages/CrossSection/","page":"CrossSection","title":"CrossSection","text":"This module enables absorption cross-section calculations of atmospheric gases at different pressures, temperatures, and broadeners (Doppler, Lorentzian, Voigt). It uses the HITRAN energy transition database for calculations. While it enables lineshape calculations from scratch, it also allows users to create and save an interpolator object at specified wavelength, pressure, and temperature grids. It can perform these computations either on CPU or GPU (CUDA).","category":"page"},{"location":"pages/CrossSection/","page":"CrossSection","title":"CrossSection","text":"You can calculate an absorption cross-section in three steps: ","category":"page"},{"location":"pages/CrossSection/","page":"CrossSection","title":"CrossSection","text":"Use read_hitran to read in a HITRAN database file\nUse make_hitran_model or make_interpolation_model to set up model parameters for the cross-section calculation\nUse absorption_cross_section to perform the cross-section calculation using the defined model settings","category":"page"},{"location":"pages/CrossSection/#Example","page":"CrossSection","title":"Example","text":"","category":"section"},{"location":"pages/CrossSection/","page":"CrossSection","title":"CrossSection","text":"using RadiativeTransfer\nusing RadiativeTransfer.CrossSection\n\n## \n## STEP 1: Get the Hitran data\n## \n\n# If you have a fixed-width file stored locally\nhitran_data = read_hitran(\"path/to/file\", mol=2, iso=1, ν_min=6000, ν_max=6400)\n\n# If you would like to download the file from the hitran database\nhitran_data = read_hitran(artifact\"hitran_molec_id_2_CO2\", mol=2, iso=1, ν_min=6000, ν_max=6400)\n\n## \n## STEP 2: Create a model from parameters\n## \n\n# These are some example models, but you can create/customize your model however you'd like. \n# Please make_hitran_model documentation for optional arguments\nmodel_doppler = make_hitran_model(hitran_data, Doppler())\nmodel_lorentz = make_hitran_model(hitran_data, Lorentz())\nmodel_voigt_CPU = make_hitran_model(hitran_data, Voigt())\nmodel_voigt_GPU = make_hitran_model(hitran_data, Voigt(), architecture=Architectures.GPU())\n\n# If you would prefer to create an interpolation, and then interpolate the cross-section \n# at other wavelengths/pressures/temperatures, you can use make_interpolation_model as such:\n\nν_grid = 6000:0.01:6400\npressures = 250:250:1250\ntemperatures = 100:75:400\n\nmodel_interp = make_interpolation_model(hitran_data, Voigt(), ν_grid, pressures, temperatures)\n\n# Note: please see make_interpolation_model documentation for optional parameters\n\n## \n## STEP 3: Calculate the absorption cross section with the created model\n## \n\n# You can specify the wavelength grid, pressure, and temperature. \nabsorption_cross_section(model_*, 6000:0.01:6400, 1000.1, 296.1)\n","category":"page"},{"location":"pages/CrossSection/#Reading-HITRAN-Files","page":"CrossSection","title":"Reading HITRAN Files","text":"","category":"section"},{"location":"pages/CrossSection/","page":"CrossSection","title":"CrossSection","text":"read_hitran","category":"page"},{"location":"pages/CrossSection/#RadiativeTransfer.CrossSection.read_hitran","page":"CrossSection","title":"RadiativeTransfer.CrossSection.read_hitran","text":"read_hitran(filepath::String, mol::Int=-1, iso::Int=-1, ν_min::Real=0, ν_max::Real=Inf)\n\nRead/parse a HITRAN data file and return the data in HitranTable format\n\n\n\n\n\n","category":"function"},{"location":"pages/CrossSection/#Defining-Models-with-Cross-Section-Parameters","page":"CrossSection","title":"Defining Models with Cross-Section Parameters","text":"","category":"section"},{"location":"pages/CrossSection/","page":"CrossSection","title":"CrossSection","text":"make_hitran_model\nmake_interpolation_model","category":"page"},{"location":"pages/CrossSection/#RadiativeTransfer.CrossSection.make_hitran_model","page":"CrossSection","title":"RadiativeTransfer.CrossSection.make_hitran_model","text":"make_hitran_model(hitran::HitranTable, \n                  broadening::AbstractBroadeningFunction; \n                  wing_cutoff::Real=40, \n                  vmr::Real=0, \n                  CEF::AbstractComplexErrorFunction=HumlicekWeidemann32SDErrorFunction(), \n                  architecture = Architectures.CPU())\n\nConvenience function to make a HitranModel out of the parameters (Matches makeinterpolationmodel)\n\n\n\n\n\n","category":"function"},{"location":"pages/CrossSection/#RadiativeTransfer.CrossSection.make_interpolation_model","page":"CrossSection","title":"RadiativeTransfer.CrossSection.make_interpolation_model","text":"make_interpolation_model(hitran::HitranTable, \n                broadening::AbstractBroadeningFunction, \n                wave_grid::AbstractRange{<:Real}, \n                p_grid::AbstractRange{<:Real},\n                t_grid::AbstractRange{<:Real}; \n                wavelength_flag::Bool=false,\n                wing_cutoff::Real=40, \n                vmr::Real=0, \n                CEF::AbstractComplexErrorFunction=HumlicekWeidemann32SDErrorFunction(),\n                architecture::AbstractArchitecture=Architectures.CPU() )\n\nUsing a HitranModel, create an InterpolationModel by interpolating the lineshape function  at the given pressure and temperature grids\n\n\n\n\n\n","category":"function"},{"location":"pages/CrossSection/#Computing-Absorption-Cross-Sections","page":"CrossSection","title":"Computing Absorption Cross-Sections","text":"","category":"section"},{"location":"pages/CrossSection/","page":"CrossSection","title":"CrossSection","text":"absorption_cross_section","category":"page"},{"location":"pages/CrossSection/#RadiativeTransfer.CrossSection.absorption_cross_section","page":"CrossSection","title":"RadiativeTransfer.CrossSection.absorption_cross_section","text":"absorption_cross_section(model::HitranModel, grid::AbstractRange{<:Real}, pressure::Real, temperature::Real; wavelength_flag::Bool=false)\n\nGiven a HitranModel, return the calculated absorption cross-section at the given pressure,  temperature, and grid of wavelengths (or wavenumbers)\n\n\n\n\n\nabsorption_cross_section(model::InterpolationModel, grid::AbstractRange{<:Real}, pressure::Real, temperature::Real; wavelength_flag::Bool=false)\n\nGiven an Interpolation Model, return the interpolated absorption cross-section at the given pressure,  temperature, and grid of wavelengths (or wavenumbers)\n\n\n\n\n\n","category":"function"},{"location":"pages/CrossSection/#Types","page":"CrossSection","title":"Types","text":"","category":"section"},{"location":"pages/CrossSection/#Hitran-Data-Structure-Type","page":"CrossSection","title":"Hitran Data Structure Type","text":"","category":"section"},{"location":"pages/CrossSection/","page":"CrossSection","title":"CrossSection","text":"HitranTable","category":"page"},{"location":"pages/CrossSection/#RadiativeTransfer.CrossSection.HitranTable","page":"CrossSection","title":"RadiativeTransfer.CrossSection.HitranTable","text":"struct HitranTable{FT}\n\nA struct, which provides all HITRAN line parameters needed to compute  absorption cross sections\n\nSee https://hitran.org/docs/definitions-and-units/ for details\n\nFields\n\nmol\nThe molecular species identification (ID) number\niso\nThe isotopologue ID number\nνᵢ\nThe wavenumber of the spectral line transition (cm-1) in vacuum\nSᵢ\nThe spectral line intensity (cm−1/(molecule·cm−2)) at Tref=296K\nAᵢ\nThe Einstein-A coefficient (s-1) of a transition\nγ_air\nThe air-broadened half width at half maximum (HWHM) (cm−1/atm) at Tref=296K and reference pressure pref=1atm\nγ_self\nThe self-broadened half width at half maximum (HWHM) (cm−1/atm) at Tref=296K and reference pressure pref=1atm\nE″\nThe lower-state energy of the transition (cm-1)\nn_air\nThe coefficient of the temperature dependence of the air-broadened half width\nδ_air\nThe pressure shift (cm−1/atm) at Tref=296K and pref=1atm of the line position with respect to the vacuum transition wavenumber νij\nglobal_upper_quanta\nThe electronic and vibrational quantum numbers and labels for the upper state of a transition\nglobal_lower_quanta\nThe electronic and vibrational quantum numbers and labels for the lower state of a transition\nlocal_upper_quanta\nRotational, hyperfine and other quantum numbers and labels for the upper state of a transition\nlocal_lower_quanta\nRotational, hyperfine and other quantum numbers and labels for the lower state of a transition\nierr\nOrdered list of indices corresponding to uncertainty estimates of transition parameters\niref\nOrdered list of reference identifiers for transition parameters\nline_mixing_flag\nA flag indicating the presence of additional data and code relating to line-mixing\ng′\nThe upper state degeneracy\ng″\nThe lower state degeneracy\n\n\n\n\n\n","category":"type"},{"location":"pages/CrossSection/#Broadening-Function-Types","page":"CrossSection","title":"Broadening Function Types","text":"","category":"section"},{"location":"pages/CrossSection/","page":"CrossSection","title":"CrossSection","text":"Doppler\nLorentz\nVoigt","category":"page"},{"location":"pages/CrossSection/#RadiativeTransfer.CrossSection.Doppler","page":"CrossSection","title":"RadiativeTransfer.CrossSection.Doppler","text":"Doppler line broadening\n\n\n\n\n\n","category":"type"},{"location":"pages/CrossSection/#RadiativeTransfer.CrossSection.Lorentz","page":"CrossSection","title":"RadiativeTransfer.CrossSection.Lorentz","text":"Lorentz line broadening\n\n\n\n\n\n","category":"type"},{"location":"pages/CrossSection/#RadiativeTransfer.CrossSection.Voigt","page":"CrossSection","title":"RadiativeTransfer.CrossSection.Voigt","text":"Voigt line broadening\n\n\n\n\n\n","category":"type"},{"location":"pages/CrossSection/#Complex-Error-Function-Types","page":"CrossSection","title":"Complex Error Function Types","text":"","category":"section"},{"location":"pages/CrossSection/","page":"CrossSection","title":"CrossSection","text":"HumlicekErrorFunction\nHumlicekWeidemann32VoigtErrorFunction\nHumlicekWeidemann32SDErrorFunction\nCPF12ErrorFunction\nErfcHumliErrorFunctionVoigt\nErfcHumliErrorFunctionSD\nErfcErrorFunction","category":"page"},{"location":"pages/CrossSection/#RadiativeTransfer.CrossSection.HumlicekErrorFunction","page":"CrossSection","title":"RadiativeTransfer.CrossSection.HumlicekErrorFunction","text":"Humlicek only formulation for Complex Error Function\n\n\n\n\n\n","category":"type"},{"location":"pages/CrossSection/#RadiativeTransfer.CrossSection.HumlicekWeidemann32VoigtErrorFunction","page":"CrossSection","title":"RadiativeTransfer.CrossSection.HumlicekWeidemann32VoigtErrorFunction","text":"Mix of Humlicek and Weidemann (N=32) Error Function, suggested for Voigt function\n\n\n\n\n\n","category":"type"},{"location":"pages/CrossSection/#RadiativeTransfer.CrossSection.HumlicekWeidemann32SDErrorFunction","page":"CrossSection","title":"RadiativeTransfer.CrossSection.HumlicekWeidemann32SDErrorFunction","text":"Mix of Humlicek and Weidemann (N=32) Error Function, suggested for Speed Dependent Voigt function\n\n\n\n\n\n","category":"type"},{"location":"pages/CrossSection/#RadiativeTransfer.CrossSection.CPF12ErrorFunction","page":"CrossSection","title":"RadiativeTransfer.CrossSection.CPF12ErrorFunction","text":"Humlicek with a single rational approximation.\n\n\n\n\n\n","category":"type"},{"location":"pages/CrossSection/#RadiativeTransfer.CrossSection.ErfcHumliErrorFunctionVoigt","page":"CrossSection","title":"RadiativeTransfer.CrossSection.ErfcHumliErrorFunctionVoigt","text":"Mix of Humplicek and erfc Special Function for Voigt\n\n\n\n\n\n","category":"type"},{"location":"pages/CrossSection/#RadiativeTransfer.CrossSection.ErfcHumliErrorFunctionSD","page":"CrossSection","title":"RadiativeTransfer.CrossSection.ErfcHumliErrorFunctionSD","text":"Mix of Humplicek and erfc Special Function for Voigt\n\n\n\n\n\n","category":"type"},{"location":"pages/CrossSection/#RadiativeTransfer.CrossSection.ErfcErrorFunction","page":"CrossSection","title":"RadiativeTransfer.CrossSection.ErfcErrorFunction","text":"erfc Special Function for Voigt\n\n\n\n\n\n","category":"type"},{"location":"pages/CrossSection/#Cross-Section-Model-Types","page":"CrossSection","title":"Cross-Section Model Types","text":"","category":"section"},{"location":"pages/CrossSection/","page":"CrossSection","title":"CrossSection","text":"HitranModel\nInterpolationModel","category":"page"},{"location":"pages/CrossSection/#RadiativeTransfer.CrossSection.HitranModel","page":"CrossSection","title":"RadiativeTransfer.CrossSection.HitranModel","text":"struct HitranModel{FT}\n\nA struct which provides all model parameters needed for cross-section  calculations using HITRAN data\n\nFields\n\nhitran\nStruct with hitran data\nbroadening\nBroadening function (Doppler/Lorentz/Voigt)\nwing_cutoff\nWing cutoff [cm-1]\nvmr\nVMR of gas itself [0-1]\nCEF\nComplex Error Function to Use\narchitecture\nComputer Architecture on which Model is run\n\n\n\n\n\n","category":"type"},{"location":"pages/CrossSection/#RadiativeTransfer.CrossSection.InterpolationModel","page":"CrossSection","title":"RadiativeTransfer.CrossSection.InterpolationModel","text":"struct InterpolationModel{FT}\n\nA struct which provides all model parameters needed for cross-section  calculations using an Interpolator\n\nFields\n\nitp\nThe interpolator\nmol\nThe molecular species identification (ID) number\niso\nThe isotopologue ID number\nbroadening\nBroadening function (Doppler/Lorentz/Voigt), as a string\nν_grid\nWavelength grids\np_grid\nWavelength grids\nt_grid\nWavelength grids\nwing_cutoff\nWing cutoff [cm-1]\nvmr\nVMR of gas itself [0-1]\nCEF\nComplex Error Function to Use\narchitecture\nComputer Architecture on which Model is run\n\n\n\n\n\n","category":"type"}]
}
